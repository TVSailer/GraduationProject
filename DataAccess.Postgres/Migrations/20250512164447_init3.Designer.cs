// <auto-generated />
using DataAccess.Postgres;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DataAccess.Postgres.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250512164447_init3")]
    partial class init3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DataAccess.Postgres.Models.DateAttendanceEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Date")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("LessonId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("LessonId");

                    b.ToTable("DateAttendances");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = "01.05.2025",
                            LessonId = 1
                        },
                        new
                        {
                            Id = 2,
                            Date = "08.05.2025",
                            LessonId = 1
                        },
                        new
                        {
                            Id = 3,
                            Date = "15.05.2025",
                            LessonId = 1
                        },
                        new
                        {
                            Id = 4,
                            Date = "02.05.2025",
                            LessonId = 2
                        },
                        new
                        {
                            Id = 5,
                            Date = "09.05.2025",
                            LessonId = 2
                        },
                        new
                        {
                            Id = 6,
                            Date = "16.05.2025",
                            LessonId = 2
                        },
                        new
                        {
                            Id = 7,
                            Date = "23.05.2025",
                            LessonId = 2
                        },
                        new
                        {
                            Id = 8,
                            Date = "03.05.2025",
                            LessonId = 3
                        },
                        new
                        {
                            Id = 9,
                            Date = "10.05.2025",
                            LessonId = 3
                        },
                        new
                        {
                            Id = 10,
                            Date = "17.05.2025",
                            LessonId = 3
                        },
                        new
                        {
                            Id = 11,
                            Date = "04.05.2025",
                            LessonId = 4
                        },
                        new
                        {
                            Id = 12,
                            Date = "18.05.2025",
                            LessonId = 4
                        },
                        new
                        {
                            Id = 13,
                            Date = "05.05.2025",
                            LessonId = 5
                        },
                        new
                        {
                            Id = 14,
                            Date = "12.05.2025",
                            LessonId = 5
                        },
                        new
                        {
                            Id = 15,
                            Date = "19.05.2025",
                            LessonId = 5
                        },
                        new
                        {
                            Id = 16,
                            Date = "06.05.2025",
                            LessonId = 6
                        },
                        new
                        {
                            Id = 17,
                            Date = "13.05.2025",
                            LessonId = 6
                        },
                        new
                        {
                            Id = 18,
                            Date = "20.05.2025",
                            LessonId = 6
                        },
                        new
                        {
                            Id = 19,
                            Date = "27.05.2025",
                            LessonId = 6
                        },
                        new
                        {
                            Id = 20,
                            Date = "07.05.2025",
                            LessonId = 7
                        },
                        new
                        {
                            Id = 21,
                            Date = "14.05.2025",
                            LessonId = 7
                        },
                        new
                        {
                            Id = 22,
                            Date = "21.05.2025",
                            LessonId = 7
                        },
                        new
                        {
                            Id = 23,
                            Date = "28.05.2025",
                            LessonId = 7
                        },
                        new
                        {
                            Id = 24,
                            Date = "04.06.2025",
                            LessonId = 7
                        });
                });

            modelBuilder.Entity("DataAccess.Postgres.Models.LessonEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TeacherId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("TeacherId");

                    b.ToTable("Lessons");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Застава",
                            TeacherId = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "Программирование",
                            TeacherId = 2
                        },
                        new
                        {
                            Id = 3,
                            Name = "Робототехника",
                            TeacherId = 3
                        },
                        new
                        {
                            Id = 4,
                            Name = "Шахматы",
                            TeacherId = 4
                        },
                        new
                        {
                            Id = 5,
                            Name = "ИЗО",
                            TeacherId = 5
                        },
                        new
                        {
                            Id = 6,
                            Name = "Театральный",
                            TeacherId = 6
                        },
                        new
                        {
                            Id = 7,
                            Name = "Футбол",
                            TeacherId = 7
                        },
                        new
                        {
                            Id = 8,
                            Name = "Волейбол",
                            TeacherId = 8
                        },
                        new
                        {
                            Id = 9,
                            Name = "Английский",
                            TeacherId = 9
                        },
                        new
                        {
                            Id = 10,
                            Name = "Математика",
                            TeacherId = 10
                        });
                });

            modelBuilder.Entity("DataAccess.Postgres.Models.TeacherEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("DateBirth")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NumberPhone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Patronymic")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Teachers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateBirth = "30.11.2005",
                            Login = "1234",
                            Name = "Валерий",
                            NumberPhone = "89898576246",
                            Password = "1234",
                            Patronymic = "Валентинович",
                            Surname = "Терегера"
                        },
                        new
                        {
                            Id = 2,
                            DateBirth = "20.12.2005",
                            Login = "1235",
                            Name = "Дмитрий",
                            NumberPhone = "89898573246",
                            Password = "1235",
                            Patronymic = "Романович",
                            Surname = "Шилов"
                        },
                        new
                        {
                            Id = 3,
                            DateBirth = "15.05.1985",
                            Login = "alex1985",
                            Name = "Александр",
                            NumberPhone = "89501234567",
                            Password = "alex123",
                            Patronymic = "Сергеевич",
                            Surname = "Иванов"
                        },
                        new
                        {
                            Id = 4,
                            DateBirth = "22.08.1990",
                            Login = "kate1990",
                            Name = "Екатерина",
                            NumberPhone = "89167891234",
                            Password = "kate456",
                            Patronymic = "Андреевна",
                            Surname = "Петрова"
                        },
                        new
                        {
                            Id = 5,
                            DateBirth = "10.03.1988",
                            Login = "misha88",
                            Name = "Михаил",
                            NumberPhone = "89654321987",
                            Password = "misha789",
                            Patronymic = "Дмитриевич",
                            Surname = "Смирнов"
                        },
                        new
                        {
                            Id = 6,
                            DateBirth = "05.12.1992",
                            Login = "olga92",
                            Name = "Ольга",
                            NumberPhone = "89031234567",
                            Password = "olga012",
                            Patronymic = "Игоревна",
                            Surname = "Васильева"
                        },
                        new
                        {
                            Id = 7,
                            DateBirth = "18.07.1983",
                            Login = "sergey83",
                            Name = "Сергей",
                            NumberPhone = "89998765432",
                            Password = "sergey345",
                            Patronymic = "Владимирович",
                            Surname = "Кузнецов"
                        },
                        new
                        {
                            Id = 8,
                            DateBirth = "25.09.1995",
                            Login = "anna95",
                            Name = "Анна",
                            NumberPhone = "89765432109",
                            Password = "anna678",
                            Patronymic = "Александровна",
                            Surname = "Новикова"
                        },
                        new
                        {
                            Id = 9,
                            DateBirth = "12.01.1980",
                            Login = "alex80",
                            Name = "Алексей",
                            NumberPhone = "89261234567",
                            Password = "alex901",
                            Patronymic = "Олегович",
                            Surname = "Федоров"
                        },
                        new
                        {
                            Id = 10,
                            DateBirth = "08.04.1987",
                            Login = "nata87",
                            Name = "Наталья",
                            NumberPhone = "89111234567",
                            Password = "nata234",
                            Patronymic = "Викторовна",
                            Surname = "Морозова"
                        });
                });

            modelBuilder.Entity("DataAccess.Postgres.Models.VisitorEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("DateBirth")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NumberPhone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Patronymic")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Visitors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateBirth = "30.11.2005",
                            Login = "1234",
                            Name = "Валерий",
                            NumberPhone = "89898576246",
                            Password = "1234",
                            Patronymic = "Валентинович",
                            Surname = "Терегера"
                        },
                        new
                        {
                            Id = 2,
                            DateBirth = "20.12.2005",
                            Login = "1235",
                            Name = "Дмитрий",
                            NumberPhone = "89898573246",
                            Password = "1235",
                            Patronymic = "Романович",
                            Surname = "Шилов"
                        },
                        new
                        {
                            Id = 3,
                            DateBirth = "15.03.2007",
                            Login = "alex2007",
                            Name = "Алексей",
                            NumberPhone = "89876543210",
                            Password = "alexpass",
                            Patronymic = "Игоревич",
                            Surname = "Петров"
                        },
                        new
                        {
                            Id = 4,
                            DateBirth = "22.05.2006",
                            Login = "elena2006",
                            Name = "Елена",
                            NumberPhone = "89123456789",
                            Password = "elenapass",
                            Patronymic = "Дмитриевна",
                            Surname = "Смирнова"
                        },
                        new
                        {
                            Id = 5,
                            DateBirth = "10.08.2005",
                            Login = "ivan2005",
                            Name = "Иван",
                            NumberPhone = "89012345678",
                            Password = "ivanpass",
                            Patronymic = "Сергеевич",
                            Surname = "Кузнецов"
                        },
                        new
                        {
                            Id = 6,
                            DateBirth = "05.12.2006",
                            Login = "olga2006",
                            Name = "Ольга",
                            NumberPhone = "89234567890",
                            Password = "olgapass",
                            Patronymic = "Андреевна",
                            Surname = "Васильева"
                        },
                        new
                        {
                            Id = 7,
                            DateBirth = "18.02.2007",
                            Login = "sergey2007",
                            Name = "Сергей",
                            NumberPhone = "89345678901",
                            Password = "sergeypass",
                            Patronymic = "Алексеевич",
                            Surname = "Новиков"
                        },
                        new
                        {
                            Id = 8,
                            DateBirth = "25.09.2006",
                            Login = "anna2006",
                            Name = "Анна",
                            NumberPhone = "89456789012",
                            Password = "annapass",
                            Patronymic = "Викторовна",
                            Surname = "Федорова"
                        },
                        new
                        {
                            Id = 9,
                            DateBirth = "12.07.2005",
                            Login = "misha2005",
                            Name = "Михаил",
                            NumberPhone = "89567890123",
                            Password = "mishapass",
                            Patronymic = "Олегович",
                            Surname = "Иванов"
                        },
                        new
                        {
                            Id = 10,
                            DateBirth = "08.04.2007",
                            Login = "natalia2007",
                            Name = "Наталья",
                            NumberPhone = "89678901234",
                            Password = "natpass",
                            Patronymic = "Сергеевна",
                            Surname = "Морозова"
                        });
                });

            modelBuilder.Entity("DateAttendanceVisitor", b =>
                {
                    b.Property<int>("DateAttendanceId")
                        .HasColumnType("integer");

                    b.Property<int>("VisitorId")
                        .HasColumnType("integer");

                    b.HasKey("DateAttendanceId", "VisitorId");

                    b.HasIndex("VisitorId");

                    b.ToTable("DateAttendanceVisitor");

                    b.HasData(
                        new
                        {
                            DateAttendanceId = 1,
                            VisitorId = 1
                        },
                        new
                        {
                            DateAttendanceId = 1,
                            VisitorId = 3
                        });
                });

            modelBuilder.Entity("LessonVisitor", b =>
                {
                    b.Property<int>("LessonId")
                        .HasColumnType("integer");

                    b.Property<int>("VisitorId")
                        .HasColumnType("integer");

                    b.HasKey("LessonId", "VisitorId");

                    b.HasIndex("VisitorId");

                    b.ToTable("LessonVisitor");

                    b.HasData(
                        new
                        {
                            LessonId = 1,
                            VisitorId = 1
                        },
                        new
                        {
                            LessonId = 1,
                            VisitorId = 3
                        });
                });

            modelBuilder.Entity("DataAccess.Postgres.Models.DateAttendanceEntity", b =>
                {
                    b.HasOne("DataAccess.Postgres.Models.LessonEntity", "Lesson")
                        .WithMany("Dates")
                        .HasForeignKey("LessonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lesson");
                });

            modelBuilder.Entity("DataAccess.Postgres.Models.LessonEntity", b =>
                {
                    b.HasOne("DataAccess.Postgres.Models.TeacherEntity", "Teacher")
                        .WithMany("Lessons")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("DateAttendanceVisitor", b =>
                {
                    b.HasOne("DataAccess.Postgres.Models.DateAttendanceEntity", null)
                        .WithMany()
                        .HasForeignKey("DateAttendanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccess.Postgres.Models.VisitorEntity", null)
                        .WithMany()
                        .HasForeignKey("VisitorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LessonVisitor", b =>
                {
                    b.HasOne("DataAccess.Postgres.Models.LessonEntity", null)
                        .WithMany()
                        .HasForeignKey("LessonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccess.Postgres.Models.VisitorEntity", null)
                        .WithMany()
                        .HasForeignKey("VisitorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DataAccess.Postgres.Models.LessonEntity", b =>
                {
                    b.Navigation("Dates");
                });

            modelBuilder.Entity("DataAccess.Postgres.Models.TeacherEntity", b =>
                {
                    b.Navigation("Lessons");
                });
#pragma warning restore 612, 618
        }
    }
}
